name: Build and upload Gradle module

on:
  workflow_call:
    inputs:
      storage_bucket:
        description: The GCP storage bucket into which to upload artifact
        type: string
        required: true
      saga_app_root:
        description: Path to source code project from root of Git repo
        type: string
        required: true
      version_property:
        description: Project property used to set app version
        required: false
        type: string
        default: appVersion
      app_version:
        description: Will set the app version of the JAR to be built and published
        required: false
        type: string
        default: ${{ github.run_number }}
      ref:
        description: Which ref to create release for. Defaults to same as workflow is run from if empty.
        required: false
        type: string
        default: ${{ github.sha }}
      workload_identity_project_id:
        description: The project ID of the workload identity project to use with `gcloud`.
        type: string
        required: true
      workload_identity_service_account:
        description: The username of the service account to use with `gcloud` (before the @). Will be used with the workload_identity_project_id. Defaults to `publisher`.
        type: string
        required: false
        default: publisher

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  REF: ${{ github.inputs.ref }}

jobs:
  build_module:
    name: Build module and publish
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ inputs.saga_app_root }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: ${{ env.REF }}

      - name: Cache Gradle
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build function
        run: ../gradlew shadowJar -P${{ inputs.version_property }}=${{ inputs.app_version }}

      - name: Zip jars
        run: find . -type f -name "*.jar" -exec bash -c 'zip -j `basename {}`.zip {}' \;

    - name: Setup Google Cloud SDK with Workload Identity Federation
      uses: svvsaga/github-actions-public/setup-gcloud-with-workload-identity@v3.12.0
      with:
        workload_identity_project_id: ${{ inputs.workload_identity_project_id }}
        workload_identity_service_account: ${{ inputs.workload_identity_service_account }}

      - name: Publish to GCS
        run: gsutil cp *.zip gs://${{ inputs.storage_bucket }}/${{ inputs.saga_app_root }}/
